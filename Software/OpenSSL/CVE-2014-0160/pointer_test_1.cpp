#include <bits/stdc++.h>
using namespace std;
int main()
{
	int m = 58;
	int arr[5] = {1,2,3,4,5};
	int *p = arr;
	cout <<"Using correct data type - "<<*p<<"\n";
	cout <<"Using correct data type and within bounds - "<<*(p+2)<<"\n";
	cout <<"Using correct data type but outof bounds - "<<*(p-9)<<"\n"; //This -9 is guessed by looking at objdump of the file and
	//it prints the value for m

	//The above three never give errors
	//Important Note -- The compiled code on execution with pointer when subtracted with some
	//small few values are always the same so most likely this data is not garbage.Upto 6 only
	//most probably because spacing might not have been by int size block after array start
	unsigned char *p2 = (unsigned char *)arr;
	/*for(int k=1;k<40;k++)
	{
		cout <<"Using Byte by Byte data to get binary data - "<<k<<" bytes behind actual array "<<(unsigned short int)*(p2-k)<<"\n";
	}*/ //I did not get success with above for loop.So I did compile with -c option to create object file and it's disassembly output
	//is seen with 
	unsigned char *p3 = (unsigned char *)(arr + 2);
	void *p4 = arr;
	return 0;
}

//Even the declaration at later stage may affect where variables are located in memory.